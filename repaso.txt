diff --git a/app/Http/Controllers/API/NotaController.php b/app/Http/Controllers/API/NotaController.php
deleted file mode 100644
index 9bc5ad3..0000000
--- a/app/Http/Controllers/API/NotaController.php
+++ /dev/null
@@ -1,100 +0,0 @@
-<?php
-
-namespace App\Http\Controllers\API;
-
-use App\Http\Controllers\Controller;
-use App\Http\Resources\NotaResource;
-use App\Models\Nota;
-use Illuminate\Http\Request;
-use Illuminate\Support\Facades\DB;
-
-class NotaController extends Controller
-{
-    /**
-     * Display a listing of the resource.
-     *
-     * @return \Illuminate\Http\Response
-     */
-
-    public function __construct()
-    {
-        $this->authorizeResource(Nota::class, 'nota');
-    }
-
-    public function index()
-    {
-        return NotaResource::collection(Nota::paginate(20));
-    }
-
-    /**
-     * Store a newly created resource in storage.
-     *
-     * @param  \Illuminate\Http\Request  $request
-     * @return \Illuminate\Http\Response
-     */
-    public function store(Request $request)
-    {
-        $nota = json_decode($request->getContent(), true);
-
-        $nota = Nota::create($nota);
-
-        return new NotaResource($nota);
-    }
-
-    /**
-     * Display the specified resource.
-     *
-     * @param  \App\Models\Nota  $nota
-     * @return \Illuminate\Http\Response
-     */
-    public function show(Nota $nota)
-    {
-        return new NotaResource($nota);
-    }
-
-    /**
-     * Update the specified resource in storage.
-     *
-     * @param  \Illuminate\Http\Request  $request
-     * @param  \App\Models\Nota  $nota
-     * @return \Illuminate\Http\Response
-     */
-    public function update(Request $request, Nota $nota)
-    {
-        $notaData = json_decode($request->getContent(), true);
-        $nota->update($notaData);
-
-        return new NotaResource($nota);
-    }
-
-    /**
-     * Remove the specified resource from storage.
-     *
-     * @param  \App\Models\Nota  $nota
-     * @return \Illuminate\Http\Response
-     */
-    public function destroy(Nota $nota)
-    {
-        $nota->delete();
-    }
-
-    public function calcularMedia(Request $request, $materia_id)
-    {
-        //return $request->user()->id;
-        //return $materia_id;
-        $total=0;
-        $notas = DB::table('notas')->where('user_id', $request->user()->id)
-            ->where('materia_id', $materia_id)
-            ->get('nota');
-
-        $totalNotas = DB::table('notas')->where('user_id', $request->user()->id)
-            ->where('materia_id', $materia_id)
-            ->count();
-
-        foreach ($notas as $key => $value) {
-            $total = $value->nota + $total;
-
-        }
-        return "La nota media del alumno: ".$request->user()->name . " es: ".$total/$totalNotas;
-    }
-}
diff --git a/app/Http/Resources/NotaResource.php b/app/Http/Resources/NotaResource.php
deleted file mode 100644
index 6c7ff0a..0000000
--- a/app/Http/Resources/NotaResource.php
+++ /dev/null
@@ -1,24 +0,0 @@
-<?php
-
-namespace App\Http\Resources;
-
-use Illuminate\Http\Resources\Json\JsonResource;
-
-class NotaResource extends JsonResource
-{
-    /**
-     * Transform the resource into an array.
-     *
-     * @param  \Illuminate\Http\Request  $request
-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable
-     */
-    public function toArray($request)
-    {
-        return [
-            "materia_id" => new MateriaResource($this->materia),
-            "user_id" => new UserResource($this->user),
-            "evaluacion" => $this->evaluacion,
-            "nota" => $this->nota,
-        ];
-    }
-}
diff --git a/app/Models/Materia.php b/app/Models/Materia.php
index 88c0746..137829f 100644
--- a/app/Models/Materia.php
+++ b/app/Models/Materia.php
@@ -12,9 +12,4 @@ class Materia extends Model
     protected $fillable = [
         'nombre'
     ];
-
-    public function notas()
-    {
-        return $this->hasMany(Nota::class, 'materia_id');
-    }
 }
diff --git a/app/Models/Nota.php b/app/Models/Nota.php
deleted file mode 100644
index b3def8c..0000000
--- a/app/Models/Nota.php
+++ /dev/null
@@ -1,21 +0,0 @@
-<?php
-
-namespace App\Models;
-
-use Illuminate\Database\Eloquent\Factories\HasFactory;
-use Illuminate\Database\Eloquent\Model;
-
-class Nota extends Model
-{
-    use HasFactory;
-
-    public function materia()
-    {
-        return $this->belongsTo(Materia::class, 'materia_id');
-    }
-
-    public function user()
-    {
-        return $this->belongsTo(User::class, 'user_id');
-    }
-}
diff --git a/app/Models/User.php b/app/Models/User.php
index ba3c515..28bd201 100644
--- a/app/Models/User.php
+++ b/app/Models/User.php
@@ -62,9 +62,4 @@ class User extends Authenticatable
     public function grupos() {
         return $this->belongsToMany(Grupo::class, 'matriculas', 'alumno', 'grupo');
     }
-
-    public function notas()
-    {
-        return $this->hasMany(Nota::class, 'user_id');
-    }
 }
diff --git a/app/Policies/CentroPolicy.php b/app/Policies/CentroPolicy.php
index 9e78e95..f71fe3e 100644
--- a/app/Policies/CentroPolicy.php
+++ b/app/Policies/CentroPolicy.php
@@ -29,7 +29,7 @@ class CentroPolicy
      * @param  \App\Models\User  $user
      * @return \Illuminate\Auth\Access\Response|bool
      */
-    public function viewAny(User $user)//index
+    public function viewAny(User $user)
     {
         return $user->id == 10; // un ejemplo de autorizaci√≥n a un usuario concreto.
     }
@@ -41,7 +41,7 @@ class CentroPolicy
      * @param  \App\Models\Centro  $centro
      * @return \Illuminate\Auth\Access\Response|bool
      */
-    public function view(User $user, Centro $centro)//show
+    public function view(User $user, Centro $centro)
     {
         return true;
     }
diff --git a/app/Policies/NotaPolicy.php b/app/Policies/NotaPolicy.php
deleted file mode 100644
index 3d37389..0000000
--- a/app/Policies/NotaPolicy.php
+++ /dev/null
@@ -1,94 +0,0 @@
-<?php
-
-namespace App\Policies;
-
-use App\Models\Nota;
-use App\Models\User;
-use Illuminate\Auth\Access\HandlesAuthorization;
-
-class NotaPolicy
-{
-    use HandlesAuthorization;
-
-    /**
-     * Determine whether the user can view any models.
-     *
-     * @param  \App\Models\User  $user
-     * @return \Illuminate\Auth\Access\Response|bool
-     */
-    public function viewAny(User $user)
-    {
-        return true;
-    }
-
-    /**
-     * Determine whether the user can view the model.
-     *
-     * @param  \App\Models\User  $user
-     * @param  \App\Models\Nota  $nota
-     * @return \Illuminate\Auth\Access\Response|bool
-     */
-    public function view(User $user, Nota $nota)
-    {
-        return true;
-    }
-
-    /**
-     * Determine whether the user can create models.
-     *
-     * @param  \App\Models\User  $user
-     * @return \Illuminate\Auth\Access\Response|bool
-     */
-    public function create(User $user)
-    {
-        return $user->esProfesor;
-    }
-
-    /**
-     * Determine whether the user can update the model.
-     *
-     * @param  \App\Models\User  $user
-     * @param  \App\Models\Nota  $nota
-     * @return \Illuminate\Auth\Access\Response|bool
-     */
-    public function update(User $user, Nota $nota)
-    {
-        return $user->esProfesor;
-    }
-
-    /**
-     * Determine whether the user can delete the model.
-     *
-     * @param  \App\Models\User  $user
-     * @param  \App\Models\Nota  $nota
-     * @return \Illuminate\Auth\Access\Response|bool
-     */
-    public function delete(User $user, Nota $nota)
-    {
-        return $user->esProfesor;
-    }
-
-    /**
-     * Determine whether the user can restore the model.
-     *
-     * @param  \App\Models\User  $user
-     * @param  \App\Models\Nota  $nota
-     * @return \Illuminate\Auth\Access\Response|bool
-     */
-    public function restore(User $user, Nota $nota)
-    {
-        //
-    }
-
-    /**
-     * Determine whether the user can permanently delete the model.
-     *
-     * @param  \App\Models\User  $user
-     * @param  \App\Models\Nota  $nota
-     * @return \Illuminate\Auth\Access\Response|bool
-     */
-    public function forceDelete(User $user, Nota $nota)
-    {
-        //
-    }
-}
diff --git a/app/Providers/AuthServiceProvider.php b/app/Providers/AuthServiceProvider.php
index ac5a2a8..515f6bf 100644
--- a/app/Providers/AuthServiceProvider.php
+++ b/app/Providers/AuthServiceProvider.php
@@ -6,9 +6,7 @@ use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvid
 use Illuminate\Support\Facades\Gate;
 use App\Policies\CentroPolicy;
 use App\Models\Centro;
-use App\Models\Nota;
 use App\Models\User;
-use App\Policies\NotaPolicy;
 
 class AuthServiceProvider extends ServiceProvider
 {
@@ -20,7 +18,6 @@ class AuthServiceProvider extends ServiceProvider
     protected $policies = [
         // 'App\Models\Model' => 'App\Policies\ModelPolicy',
         Centro::class => CentroPolicy::class,
-        Nota::class => NotaPolicy::class,
     ];
 
     /**
diff --git a/database/factories/NotaFactory.php b/database/factories/NotaFactory.php
deleted file mode 100644
index afb2e64..0000000
--- a/database/factories/NotaFactory.php
+++ /dev/null
@@ -1,23 +0,0 @@
-<?php
-
-namespace Database\Factories;
-
-use Illuminate\Database\Eloquent\Factories\Factory;
-
-class NotaFactory extends Factory
-{
-    /**
-     * Define the model's default state.
-     *
-     * @return array
-     */
-    public function definition()
-    {
-        return [
-            'user_id'=>$this->faker->numberBetween(1, 10),
-            'materia_id'=>$this->faker->numberBetween(1, 10),
-            'evaluacion'=>$this->faker->numberBetween(1, 3),
-            'nota'=>$this->faker->numberBetween(1, 10)
-        ];
-    }
-}
diff --git a/database/migrations/2022_02_16_072006_create_notas_table.php b/database/migrations/2022_02_16_072006_create_notas_table.php
deleted file mode 100644
index 1cf56e3..0000000
--- a/database/migrations/2022_02_16_072006_create_notas_table.php
+++ /dev/null
@@ -1,35 +0,0 @@
-<?php
-
-use Illuminate\Database\Migrations\Migration;
-use Illuminate\Database\Schema\Blueprint;
-use Illuminate\Support\Facades\Schema;
-
-class CreateNotasTable extends Migration
-{
-    /**
-     * Run the migrations.
-     *
-     * @return void
-     */
-    public function up()
-    {
-        Schema::create('notas', function (Blueprint $table) {
-            $table->id();
-            $table->bigInteger('user_id');
-            $table->bigInteger('materia_id');
-            $table->integer('evaluacion');
-            $table->integer('nota');
-            $table->timestamps();
-        });
-    }
-
-    /**
-     * Reverse the migrations.
-     *
-     * @return void
-     */
-    public function down()
-    {
-        Schema::dropIfExists('notas');
-    }
-}
diff --git a/database/migrations/2022_02_17_200124_add_profesor_to_user_table.php b/database/migrations/2022_02_17_200124_add_profesor_to_user_table.php
deleted file mode 100644
index 1ecc144..0000000
--- a/database/migrations/2022_02_17_200124_add_profesor_to_user_table.php
+++ /dev/null
@@ -1,32 +0,0 @@
-<?php
-
-use Illuminate\Database\Migrations\Migration;
-use Illuminate\Database\Schema\Blueprint;
-use Illuminate\Support\Facades\Schema;
-
-class AddProfesorToUserTable extends Migration
-{
-    /**
-     * Run the migrations.
-     *
-     * @return void
-     */
-    public function up()
-    {
-        Schema::table('users', function (Blueprint $table) {
-            $table->boolean('esProfesor')->nullable();
-        });
-    }
-
-    /**
-     * Reverse the migrations.
-     *
-     * @return void
-     */
-    public function down()
-    {
-        Schema::table('users', function (Blueprint $table) {
-            $table->dropColumn('esProfesor');
-        });
-    }
-}
diff --git a/database/migrations/2022_02_17_212746_add_alumno_to_user_table.php b/database/migrations/2022_02_17_212746_add_alumno_to_user_table.php
deleted file mode 100644
index ab2b552..0000000
--- a/database/migrations/2022_02_17_212746_add_alumno_to_user_table.php
+++ /dev/null
@@ -1,32 +0,0 @@
-<?php
-
-use Illuminate\Database\Migrations\Migration;
-use Illuminate\Database\Schema\Blueprint;
-use Illuminate\Support\Facades\Schema;
-
-class AddAlumnoToUserTable extends Migration
-{
-    /**
-     * Run the migrations.
-     *
-     * @return void
-     */
-    public function up()
-    {
-        Schema::table('users', function (Blueprint $table) {
-            $table->boolean('esAlumno')->nullable();
-        });
-    }
-
-    /**
-     * Reverse the migrations.
-     *
-     * @return void
-     */
-    public function down()
-    {
-        Schema::table('users', function (Blueprint $table) {
-            $table->dropColumn('esAlumno');
-        });
-    }
-}
diff --git a/database/seeders/DatabaseSeeder.php b/database/seeders/DatabaseSeeder.php
index 6e925eb..6f2ee28 100644
--- a/database/seeders/DatabaseSeeder.php
+++ b/database/seeders/DatabaseSeeder.php
@@ -2,7 +2,6 @@
 
 namespace Database\Seeders;
 
-use App\Models\User;
 use Illuminate\Database\Seeder;
 
 class DatabaseSeeder extends Seeder
@@ -14,46 +13,6 @@ class DatabaseSeeder extends Seeder
      */
     public function run()
     {
-        self::seedUsers();
+        \App\Models\User::factory(10)->create();
     }
-
-    private static function seedUsers()
-    {
-        //User::truncate();
-        // Crear 2 registros de usuario
-        //\App\Models\User::factory(2)->create();
-        // Crear al administrador
-        /*
-        $admin = new User();
-        $admin->name = env('ADMIN_NAME', 'admin');
-        $admin->email = env('ADMIN_EMAIL', 'email.email.com');
-        $admin->password = bcrypt(env('ADMIN_PASSWORD', 'alumno'));
-        $admin->save();
-        */
-        //Utilizando el m√©todo create()
-
-        foreach (self::$arrayUsuarios as $usuarios) {
-            $usuarios['password']=bcrypt($usuarios['password']);
-            User::create(
-                $usuarios
-            );
-        }
-
-
-    }
-
-    private static $arrayUsuarios = array(
-        array(
-            'name' => "Alberto Sierra",
-            'email' => "alberto.sierra@alu.murciaeduca.es",
-            'password' => 'password',
-            'esprofesor' => true
-        ),
-        array(
-            'name' => "Javier Murcia",
-            'email' => "1833822@alu.murciaeduca.es",
-            'password' => 'password',
-            'esalumno' => true
-        )
-    );
 }
diff --git a/database/seeders/NotasTableSeeder.php b/database/seeders/NotasTableSeeder.php
deleted file mode 100644
index 7bab689..0000000
--- a/database/seeders/NotasTableSeeder.php
+++ /dev/null
@@ -1,19 +0,0 @@
-<?php
-
-namespace Database\Seeders;
-
-use App\Models\Nota;
-use Illuminate\Database\Seeder;
-
-class NotasTableSeeder extends Seeder
-{
-    /**
-     * Run the database seeds.
-     *
-     * @return void
-     */
-    public function run()
-    {
-        \App\Models\Nota::factory(48)->create();
-    }
-}
diff --git a/routes/api.php b/routes/api.php
index b92559e..bfb9984 100644
--- a/routes/api.php
+++ b/routes/api.php
@@ -17,7 +17,7 @@ use App\Http\Controllers\API\MateriaController;
 use App\Http\Controllers\API\MatriculaController;
 use App\Http\Controllers\API\PeriodoLectivoController;
 use App\Http\Controllers\API\MateriaMatriculadaController;
-use App\Http\Controllers\API\NotaController;
+
 use Illuminate\Http\Request;
 use Illuminate\Support\Facades\Route;
 use Psr\Http\Message\ServerRequestInterface;
@@ -83,9 +83,7 @@ Route::middleware('auth:sanctum')->
 
 Route::apiResource('tutorizados', TutorizadoController::class);
 
-Route::middleware('auth:sanctum')->apiResource('notas', NotaController::class);
 
-Route::middleware('auth:sanctum')->get('notas/media/{materia_id}', [NotaController::class, 'calcularMedia']);
 
 Route::apiResource('materias', MateriaController::class);
 
diff --git a/tests/Feature/NotasTest.php b/tests/Feature/NotasTest.php
deleted file mode 100644
index 706811a..0000000
--- a/tests/Feature/NotasTest.php
+++ /dev/null
@@ -1,29 +0,0 @@
-<?php
-
-namespace Tests\Feature;
-
-use App\Models\Nota;
-use Illuminate\Foundation\Testing\RefreshDatabase;
-use Illuminate\Foundation\Testing\WithFaker;
-use Laravel\Sanctum\Sanctum;
-use Tests\TestCase;
-
-class NotasTest extends TestCase
-{
-    /**
-     * A basic feature test example.
-     *
-     * @return void
-     */
-    public function test_example()
-    {
-        Sanctum::actingAs(
-            Nota::factory(48)->create()
-        );
-
-
-        $response = $this->get('/');
-
-        $response->assertStatus(200);
-    }
-}
